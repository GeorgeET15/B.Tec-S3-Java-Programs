Write a program to read numbers in a file and copy the prime numbers among
them into another file.


import java.io.*;
import java.util.ArrayList;

public class PrimeNumberFileCopy {
    // Function to check if a number is prime
    static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        String inputFileName = "input.txt"; // Replace with your input file
        String outputFileName = "output.txt"; // Replace with your output file

        try (BufferedReader reader = new BufferedReader(new FileReader(inputFileName));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFileName))) {

            String line;
            while ((line = reader.readLine()) != null) {
                String[] numbers = line.split("\\s+"); // Split the line into numbers

                for (String numberStr : numbers) {
                    try {
                        int num = Integer.parseInt(numberStr);
                        if (isPrime(num)) {
                            writer.write(Integer.toString(num));
                            writer.write(" "); // Separate prime numbers with space
                        }
                    } catch (NumberFormatException e) {
                        System.err.println("Ignoring non-integer value: " + numberStr);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("Prime numbers copied to " + outputFileName);
    }
}




Implement a simple file encryption program that reads a text file, encrypts its
contents, and then saves the encrypted data to a new file. You can use a simple
substitution cipher, such as shifting characters by a fixed number:



import java.io.*;

public class FileEncryption {
    public static void main(String[] args) {
        String inputFileName = "input.txt"; // Replace with your input file
        String outputFileName = "output.txt"; // Replace with your output file
        int shift = 3; // Specify the shift value for the Caesar cipher

        try (BufferedReader reader = new BufferedReader(new FileReader(inputFileName));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFileName))) {

            int character;
            while ((character = reader.read()) != -1) {
                if (Character.isLetter(character)) {
                    char originalChar = (char) character;
                    char encryptedChar = encryptChar(originalChar, shift);
                    writer.write(encryptedChar);
                } else {
                    writer.write(character);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("File has been encrypted and saved to " + outputFileName);
    }

    // Caesar cipher encryption method
    static char encryptChar(char ch, int shift) {
        if (Character.isLowerCase(ch)) {
            return (char) ((ch - 'a' + shift) % 26 + 'a');
        } else if (Character.isUpperCase(ch)) {
            return (char) ((ch - 'A' + shift) % 26 + 'A');
        } else {
            return ch; // Preserve non-alphabet characters
        }
    }
}
